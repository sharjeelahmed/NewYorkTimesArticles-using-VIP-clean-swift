//
//  ArticleListPresenter.swift
//  NewYorkTimesArticles
//
//  Created by shairjeel ahmed on 24/07/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ArticleListPresentationLogic
{
    func presentFetchedArticles(response: ListArticles.fetchArticle.Response)

  //func presentSomething(response: ListArticles.fetchArticle.Response)
}

class ArticleListPresenter: ArticleListPresentationLogic
{
  weak var viewController: ArticleListDisplayLogic?
  
  // MARK: Do something
  
    func presentFetchedArticles(response: ListArticles.fetchArticle.Response){
        var displayedArticles: [ListArticles.fetchArticle.ViewModel.DisplayedArticle] = []
        for article in response.articles {
            let imageUrl = article.media?.first?.mediaMetadata?.first?.url ?? Constants.userPlaceHolder
            
            let displayArticle = ListArticles.fetchArticle.ViewModel.DisplayedArticle.init(title: article.title, authorNames: article.byline, date: article.published_date, imageUrl: imageUrl)
            displayedArticles.append(displayArticle)
        }
        let viewModel = ListArticles.fetchArticle.ViewModel(displayedArticles: displayedArticles)

      viewController?.displayFetchedArticles(viewModel: viewModel )
    }

  /*func presentSomething(response: ListArticles.fetchArticle.Response)
  {
      var displayedArticles: [ListArticles.fetchArticle.ViewModel.DisplayedArticle] = []
      for article in response.articles {
          let displayArticle = ListArticles.fetchArticle.ViewModel.DisplayedArticle.init(title: article.title, authorNames: article.authorNames, date: article.date, imageUrl: article.imageUrl)
          displayedArticles.append(displayArticle)
      }
    viewController?.displayFetchedArticles(viewModel: displayedArticles)
  }*/
}
